#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        rotate_msc_up_down: rotate_msc_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ROTATE_MSC_UP_DOWN";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                      &kp W         &kp E         &kp R            &kp T                                                       &kp Y        &kp U  &lt 5 I   &kp O     &kp P
&mt LEFT_ALT A             &kp S         &kp D         &kp F            &kp G        &kp LS(LG(S))                &kp CAPSLOCK      &kp H        &kp J  &kp K     &kp L     &kp ENTER
&mt LEFT_SHIFT Z           &kp X         &kp C         &kp V            &kp B        &kp MINUS                    &kp B             &kp N        &kp M  &mkp MB1  &mkp MB2  &mt RIGHT_SHIFT SLASH
&mt LEFT_CONTROL CAPSLOCK  &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 BACKSPACE  &lt 2 SPACE  &lt_to_layer_0 3 DELETE      &lt 2 INT_HENKAN  &lt 1 SPACE                             &mt RIGHT_CONTROL K_CONTEXT_MENU
            >;

            sensor-bindings = <&rotate_msc_up_down>;
        };

        SYMBOLS {
            bindings = <
&kp PIPE       &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                                    &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LESS_THAN  &kp GREATER_THAN  &kp COLON
&kp BACKSLASH  &kp DOLLAR       &kp PERCENT   &kp CARET             &kp EQUAL              &trans         &kp DOUBLE_QUOTES  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp COMMA      &kp PERIOD        &kp SEMICOLON
&trans         &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp PLUS               &kp MINUS      &kp APOSTROPHE     &kp UNDERSCORE    &kp TILDE          &trans         &trans            &kp GRAVE
&trans         &trans           &trans        &trans                &trans                 &trans         &trans             &trans                                                                &trans
            >;
        };

        NUMARROW {
            bindings = <
&kp SLASH     &kp N7  &kp N8  &kp N9  &kp N0                            &trans    &kp UP    &kp LESS_THAN  &kp GREATER_THAN  &trans
&kp ASTERISK  &kp N4  &kp N5  &kp N6  &kp EQUAL  &trans         &trans  &kp LEFT  &kp DOWN  &kp RIGHT      &trans            &trans
&kp PERIOD    &kp N1  &kp N2  &kp N3  &kp PLUS   &kp MINUS      &trans  &trans    &trans    &trans         &trans            &none
&trans        &trans  &trans  &trans  &trans     &trans         &trans  &trans                                               &trans
            >;
        };

        FUNCTION {
            bindings = <
&none   &kp F9  &kp F10  &kp F11  &kp F12                      &trans  &trans  &trans  &trans  &trans
&none   &kp F5  &kp F6   &kp F7   &kp F8   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&none   &kp F1  &kp F2   &kp F3   &kp F4   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans   &trans   &trans   &trans      &trans  &trans                          &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &mkp MB1  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
